{
	// Place your Wordlet workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Cadence Transaction Template": {
		"prefix": "transaction",
		"body": [
			"const ${1:functionName} = async(${2:params})=>{",
			"\ttry {",
			"\t\tlet transaction = await mutate({",
			"\t\t\tcadence: ${3:CADENCE},",
			"\t\t\tlimit: ${4:LIMIT},",
			"\t\t\targs: (arg, t) => []",
			"\t\t})",
			"\t\tconsole.log(\"TxID : \" + transaction)",
			"\t\tawait tx(transaction).onceSealed()",
			"\t\tconsole.log(\"Transaction Effectuée\")",
			"\t} catch (error) {",
			"\t\tconsole.log(\"Transaction Echouée\")",
			"\t\tconsole.error(error)",
			"\t}",
			"}",
		]
	},

	"Cadence Script Template": {
		"prefix": "script",
		"body": [
			"const ${1:functionName} = async(${2:params})=>{",
			"\ttry {",
			"\t\tawait query({",
			"\t\t\tcadence: ${3:CADENCE},",
			"\t\t\targs: (arg, t) => []",
			"\t\t})",
			"\t\t.then(function(data) {",
			"\t\t\t${4:action}",
			"\t\t})",
			"\t} catch (error) {",
			"\t\tconsole.debug(\"${1:functionName} Failed\")",
			"\t\tconsole.error(error)",
			"\t}",
			"}",
		]
	},

	"Cadence Argument Template": {
		"prefix": "arg",
		"body": [
			"arg(${1:value}, t.${2:type})"
		]
	}
}