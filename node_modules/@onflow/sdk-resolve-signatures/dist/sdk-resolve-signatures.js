var r=require("@onflow/interaction"),e=require("@onflow/encode"),n=require("@onflow/util-address");function t(){return(t=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t])}return r}).apply(this,arguments)}function o(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function a(r){return{script:r.message.cadence,refBlock:r.message.refBlock||null,gasLimit:r.message.computeLimit,arguments:r.message.arguments.map(function(e){return r.arguments[e].asArgument}),proposalKey:{address:n.sansPrefix(r.accounts[r.proposer].addr),keyId:r.accounts[r.proposer].keyId,sequenceNum:r.accounts[r.proposer].sequenceNum},payer:n.sansPrefix(r.accounts[r.payer].addr),authorizers:r.authorizations.map(function(e){return n.sansPrefix(r.accounts[e].addr)}).reduce(function(r,e){return r.find(function(r){return r===e})?r:[].concat(r,[e])},[])}}var i=function(r,e,t){void 0===e&&(e=[]);try{return Promise.all(e.map(function(e){try{return Promise.resolve(r.accounts[e].signingFunction({message:t,addr:n.sansPrefix(r.accounts[e].addr),keyId:r.accounts[e].keyId,roles:r.accounts[e].role,interaction:r})).then(function(t){if(t.cid=e,n.sansPrefix(r.accounts[e].addr)!==n.sansPrefix(t.addr))throw new Error(e+" — mismatching address in composite signature");if(r.accounts[e].keyId!==t.keyId)throw new Error(e+" — mismatching keyId in composite signature");return t.sig=t.signature,t.address=n.sansPrefix(t.addr),t})}catch(r){return Promise.reject(r)}}))}catch(r){return Promise.reject(r)}};function s(r,e){for(var n,t=function(r,e){var n;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(n=function(r,e){if(r){if("string"==typeof r)return o(r,void 0);var n=Object.prototype.toString.call(r).slice(8,-1);return"Object"===n&&r.constructor&&(n=r.constructor.name),"Map"===n||"Set"===n?Array.from(r):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(r,void 0):void 0}}(r))){n&&(r=n);var t=0;return function(){return t>=r.length?{done:!0}:{done:!1,value:r[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=r[Symbol.iterator]()).next.bind(n)}(e);!(n=t()).done;){var a=n.value;r.accounts[a.cid].signature=a.signature}return e}exports.resolveSignatures=function(n){try{if(!r.isTransaction(n))return Promise.resolve(n);var o=function(r){var e=new Set(r.authorizations);e.add(r.proposer),e.delete(r.payer),e=Array.from(e);var n=new Set([r.payer]);return{insideSigners:e,outsideSigners:n=Array.from(n)}}(n),u=o.outsideSigners;return Promise.resolve(i(n,o.insideSigners,e.encodeTransactionPayload(a(n)))).then(function(r){var o=s(n,r);return Promise.resolve(i(n,u,e.encodeTransactionEnvelope(t({},a(n),{payloadSigs:o})))).then(function(r){return s(n,r),n})})}catch(r){return Promise.reject(r)}};
//# sourceMappingURL=sdk-resolve-signatures.js.map
