var e=require("@onflow/interaction");exports.resolveCadence=function(n){try{return Promise.resolve(function(t,r){try{var o=function(){if(function(n){return!(e.isTransaction(n)||e.isScript(n))}(n))return e.Ok(n);var t=e.get(n,"ix.cadence");if("string"==typeof t)return n.message.cadence=t,e.Ok(n);if("function"==typeof t){Object.values(n.params).length>=1&&console.error("\n          %cFCL/SDK Deprecation Notice\n          ============================\n\n          Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n          You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n          ============================\n        ","font-weight:bold;font-family:monospace;");var r=Object.fromEntries(Object.values(n.params).map(function(e){return[e.key,e.value]}));return Promise.resolve(t(r)).then(function(t){return n.message.cadence=t,e.Ok(n)})}throw new Error('ix.cadence had a type of: "'+typeof t+'", but it must needs to be a "string" or a "function" that returns a string.')}()}catch(e){return r(e)}return o&&o.then?o.then(void 0,r):o}(0,function(t){return e.Bad(n,t)}))}catch(e){return Promise.reject(e)}};
//# sourceMappingURL=sdk-resolve-cadence.js.map
