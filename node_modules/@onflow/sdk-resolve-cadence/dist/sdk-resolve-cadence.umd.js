!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@onflow/interaction")):"function"==typeof define&&define.amd?define(["exports","@onflow/interaction"],n):n((e=e||self).sdkResolveCadence={},e.interaction)}(this,function(e,n){e.resolveCadence=function(e){try{return Promise.resolve(function(t,o){try{var r=function(){if(function(e){return!(n.isTransaction(e)||n.isScript(e))}(e))return n.Ok(e);var t=n.get(e,"ix.cadence");if("string"==typeof t)return e.message.cadence=t,n.Ok(e);if("function"==typeof t){Object.values(e.params).length>=1&&console.error("\n          %cFCL/SDK Deprecation Notice\n          ============================\n\n          Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n          You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n          ============================\n        ","font-weight:bold;font-family:monospace;");var o=Object.fromEntries(Object.values(e.params).map(function(e){return[e.key,e.value]}));return Promise.resolve(t(o)).then(function(t){return e.message.cadence=t,n.Ok(e)})}throw new Error('ix.cadence had a type of: "'+typeof t+'", but it must needs to be a "string" or a "function" that returns a string.')}()}catch(e){return o(e)}return r&&r.then?r.then(void 0,o):r}(0,function(t){return n.Bad(e,t)}))}catch(e){return Promise.reject(e)}}});
//# sourceMappingURL=sdk-resolve-cadence.umd.js.map
