import{isTransaction as e,isScript as n,Ok as t,get as o,Bad as r}from"@onflow/interaction";async function a(a){try{if(function(t){return!(e(t)||n(t))}(a))return t(a);const r=o(a,"ix.cadence");if("string"==typeof r)return a.message.cadence=r,t(a);if("function"==typeof r){Object.values(a.params).length>=1&&console.error("\n          %cFCL/SDK Deprecation Notice\n          ============================\n\n          Interopolation of functions into template literals will not be a thing in future versions of the Flow-JS-SDK or FCL.\n          You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\n\n          ============================\n        ","font-weight:bold;font-family:monospace;");const e=Object.fromEntries(Object.values(a.params).map(e=>[e.key,e.value]));return a.message.cadence=await r(e),t(a)}throw new Error(`ix.cadence had a type of: "${typeof r}", but it must needs to be a "string" or a "function" that returns a string.`)}catch(e){return r(a,e)}}export{a as resolveCadence};
//# sourceMappingURL=sdk-resolve-cadence.modern.js.map
