{"version":3,"file":"fcl.module.js","sources":["../src/default-config.js","../src/resolvers/resolve-cadence.js","../src/resolvers/resolve-arguments.js","../src/resolvers/resolve-accounts.js","../node_modules/@onflow/encode/dist/encode.module.js","../src/resolvers/resolve-signatures.js","../src/temp.js","../src/resolvers/resolve-final-normalization.js","../src/serialize/index.js","../src/transaction/index.js","../src/events/index.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/normalize/composite-signature.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/index.js","../src/current-user/render-authn-frame.js","../src/current-user/render-frame.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"challenge.handshake\", \"http://localhost:8700/authenticate\")\n","import {isTransaction, isScript, get} from \"@onflow/interaction\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"@onflow/interaction\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"@onflow/interaction\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import{encode as n}from\"@onflow/rlp\";var e=function(n){return c(a(n))},r=function(n){return c(i(n))},t=function(n,e){return Buffer.from(n.padStart(2*e,0),\"hex\")},o=function(n){return t(n,8)},u=function(n){return Buffer.from(JSON.stringify(n),\"utf8\")},c=function(e){return n(e).toString(\"hex\")},a=function(n){return d(n),[(r=n.script,Buffer.from(r,\"utf8\")),n.arguments.map(u),(e=n.refBlock,t(e,32)),n.gasLimit,o(n.proposalKey.address),n.proposalKey.keyId,n.proposalKey.sequenceNum,o(n.payer),n.authorizers.map(o)];var e,r},i=function(n){return p(n),[a(n),f(n)]},f=function(n){var e=s(n);return n.payloadSigs.map(function(n){return{signerIndex:e.get(n.address),keyId:n.keyId,sig:n.sig}}).sort(function(n,e){return n.signerIndex>e.signerIndex?1:n.signerIndex<e.signerIndex?-1:n.keyId>e.keyId?1:n.keyId<e.keyId?-1:void 0}).map(function(n){return[n.signerIndex,n.keyId,(e=n.sig,Buffer.from(e,\"hex\"))];var e})},s=function(n){var e=new Map,r=0,t=function(n){e.has(n)||(e.set(n,r),r++)};return t(n.proposalKey.address),t(n.payer),n.authorizers.forEach(t),e},d=function(n){k.forEach(function(e){return v(n,e)}),g.forEach(function(e){return v(n.proposalKey,e,\"proposalKey\")})},p=function(n){I.forEach(function(e){return v(n,e)}),n.payloadSigs.forEach(function(n,e){x.forEach(function(r){return v(n,r,\"payloadSigs\",e)})})},l=function(n){return\"number\"==typeof n},m=function(n){return\"string\"==typeof n},h=function(n){return null!==n&&\"object\"==typeof n},y=function(n){return h(n)&&n instanceof Array},k=[{name:\"script\",check:m},{name:\"arguments\",check:y},{name:\"refBlock\",check:m,defaultVal:\"0\"},{name:\"gasLimit\",check:l},{name:\"proposalKey\",check:h},{name:\"payer\",check:m},{name:\"authorizers\",check:y}],g=[{name:\"address\",check:m},{name:\"keyId\",check:l},{name:\"sequenceNum\",check:l}],I=[{name:\"payloadSigs\",check:y}],x=[{name:\"address\",check:m},{name:\"keyId\",check:l},{name:\"sig\",check:m}],v=function(n,e,r,t){var o=e.name,u=e.check,c=e.defaultVal;if(null==n[o]&&null!=c&&(n[o]=c),null==n[o])throw K(o,r,t);if(!u(n[o]))throw S(o,r,t)},E=function(n,e,r){return e?null==r?e+\".\"+n:e+\".\"+r+\".\"+n:n},K=function(n,e,r){return new Error(\"Missing field \"+E(n,e,r))},S=function(n,e,r){return new Error(\"Invalid field \"+E(n,e,r))};export{r as encodeTransactionEnvelope,e as encodeTransactionPayload};\n//# sourceMappingURL=encode.module.js.map\n","import {isTransaction} from \"@onflow/interaction\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"@onflow/encode\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {pipe} from \"@onflow/interaction\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"@onflow/interaction\"\nimport {latestBlock} from \"@onflow/sdk-latest-block\"\nimport {account as fetchAccount} from \"@onflow/sdk-account\"\n\nimport {resolveCadence} from \"./resolvers/resolve-cadence.js\"\nimport {resolveArguments} from \"./resolvers/resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolvers/resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolvers/resolve-signatures.js\"\nimport {resolveFinalNormalization} from \"./resolvers/resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n  resolveCadence,\n  resolveArguments,\n  resolveAccounts,\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  resolveFinalNormalization,\n])\n\nconfig().put(\"sdk.resolve\", resolve)\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    ix.message.refBlock = (await latestBlock()).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      ix.accounts[acct.tempId].sequenceNum = await fetchAccount(acct.addr)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {interaction, pipe} from \"@onflow/interaction\"\nimport {resolve as defaultResolve} from \"@onflow/sdk-resolve\"\nimport {config} from \"@onflow/config\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  // prettier-ignore\n  const resolveFunction = await config()\n    .get(\"sdk.resolve\", opts.resolve || defaultResolve(opts))\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n  return JSON.stringify(await resolveFunction(args), null, 2)\n}\n","import \"../default-config\"\nimport {config} from \"@onflow/config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend} from \"@onflow/sdk-send\"\nimport {decode} from \"@onflow/sdk-decode\"\nimport {getTransactionStatus} from \"@onflow/sdk-build-transaction-status\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async (transactionId) => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = (tx) => tx.status === 5\nconst isSealed = (tx) => tx.status >= 4\nconst isExecuted = (tx) => tx.status >= 3\nconst isFinalized = (tx) => tx.status >= 2\nconst isPending = (tx) => tx.status >= 1\nconst isUnknown = (tx) => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = (transactionId) => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = (transactionId) => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus) => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config} from \"@onflow/config\"\nimport {latestBlock} from \"@onflow/sdk-latest-block\"\nexport {getEvents} from \"@onflow/sdk-build-get-events\"\nimport {send} from \"@onflow/sdk-send\"\nimport {decode} from \"@onflow/sdk-decode\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGME = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\n\nexport function normalizeServices(services, data) {\n  return services.map((service) => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    // console.log(service.type, {normalized, service})\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:FRAME:CLOSE\"\nconst READY_EVENT = \"FCL:FRAME:READY\"\n\nconst noop = () => {}\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  console.log(\"FRAME\", {service, opts})\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (e.data.type === CLOSE_EVENT) close()\n      if (e.data.type === READY_EVENT) onReady(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (e.data.type === \"FCL::AUTHZ_READY\") onReady(e, {send, close})\n      if (e.data.type === \"FCL::CHALLENGE::CANCEL\") close()\n      if (e.data.type === \"FCL::CANCEL\") close()\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      console.log(\"SEND\", msg)\n      $frame.contentWindow.postMessage(\n        JSON.parse(JSON.stringify(msg || {})),\n        \"*\"\n      )\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {serviceEndpoint} from \"./utils/service-endpoint\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\nimport {frame} from \"./utils/frame\"\nimport {poll} from \"./utils/poll\"\n\nexport async function execHttpPost(service, signable) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const {close: closeFrame} = frame(resp.local, {\n      onClose() {\n        canContinue = false\n      },\n    })\n\n    return poll(resp.updates, () => canContinue)\n      .then(compositeSignature => {\n        closeFrame()\n        return normalizeCompositeSignature(compositeSignature)\n      })\n      .catch(error => {\n        console.error(error)\n        closeFrame()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n}\n\nexport async function execService(service, msg) {\n  try {\n    return STRATEGIES[service.method](service, msg)\n  } catch (error) {\n    console.error(\"execService(service, msg)\", error, {service, msg})\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\n\nexport function execIframeRPC(service, signable) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    signable.data = service.data\n\n    frame(service, {\n      onReady(_, {send}) {\n        try {\n          send({\n            jsonrpc: \"2.0\",\n            id: id,\n            method: \"fcl:sign\",\n            params: [signable, service.params],\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(normalizeCompositeSignature(resp.data))\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n    })\n  })\n}\n","import \"../default-config\"\nimport {account} from \"@onflow/sdk-account\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {account as fetchAccount} from \"@onflow/sdk-account\"\nimport {renderAuthnFrame} from \"./render-authn-frame\"\nimport {buildUser} from \"./build-user\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {validateCompositeSignature} from \"./validate-composite-signature\"\nimport {execService} from \"./exec-service\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\n// Backwards Compatibility\nconst CANCEL_EVENT = \"FCL::CANCEL\"\nconst CHALLENGE_RESPONSE_EVENT = \"FCL::CHALLENGE::RESPONSE\"\nconst CHALLENGE_CANCEL_EVENT = \"FCL::CHALLENGE::CANCEL\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(sessionStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      sessionStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    sessionStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function authenticate() {\n  return new Promise(async resolve => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n\n    const [$frame, unrender] = renderAuthnFrame({\n      handshake: await config().get(\"challenge.handshake\"),\n      l6n: window.location.origin,\n    })\n\n    const replyFn = async ({data}) => {\n      if (data.type === CHALLENGE_CANCEL_EVENT || data.type === CANCEL_EVENT) {\n        unrender()\n        window.removeEventListener(\"message\", replyFn)\n        return\n      }\n      if (data.type !== CHALLENGE_RESPONSE_EVENT) return\n\n      unrender()\n      window.removeEventListener(\"message\", replyFn)\n\n      send(NAME, SET_CURRENT_USER, await buildUser(data))\n      resolve(await snapshot())\n    }\n\n    window.addEventListener(\"message\", replyFn)\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService(az, signable)\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(await execService(preAuthz, preSignable))\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return execService(authz, signable)\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    subscribe,\n    snapshot,\n  }\n}\n","import {renderFrame} from \"./render-frame\"\n\nexport function renderAuthnFrame({handshake, l6n}) {\n  var url = new URL(handshake)\n  url.searchParams.append(\"l6n\", l6n)\n  return renderFrame(url.href)\n}\n","const FRAME_ID = \"FCL_IFRAME\"\n\nexport function renderFrame(src) {\n  if (document.getElementById(FRAME_ID)) return\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME_ID\n  $frame.allow = \"usb *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = `\n    position:fixed;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    height: 100vh;\n    width: 100vw;\n    display:block;\n    background:rgba(0,0,0,0.25);\n    z-index: 2147483647;\n    box-sizing: border-box;\n  `\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME_ID)) {\n      document.getElementById(FRAME_ID).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import \"./default-config\"\nimport \"./temp\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = () => currentUser().authenticate()\nexport const logIn = () => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk-send\"\nexport {decode} from \"@onflow/sdk-decode\"\nexport {account} from \"@onflow/sdk-account\"\nexport {latestBlock} from \"@onflow/sdk-latest-block\"\nexport {isOk, isBad, why, pipe} from \"@onflow/interaction\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// builders\nexport {transaction} from \"@onflow/sdk-build-transaction\"\nexport {script} from \"@onflow/sdk-build-script\"\nexport {ping} from \"@onflow/sdk-build-ping\"\nexport {getAccount} from \"@onflow/sdk-build-get-account\"\nexport {getEvents} from \"@onflow/sdk-build-get-events\"\nexport {getLatestBlock} from \"@onflow/sdk-build-get-latest-block\"\nexport {getBlockById} from \"@onflow/sdk-build-get-block-by-id\"\nexport {getBlockByHeight} from \"@onflow/sdk-build-get-block-by-height\"\nexport {getTransactionStatus} from \"@onflow/sdk-build-transaction-status\"\nexport {authorizations, authorization} from \"@onflow/sdk-build-authorizations\"\nexport {args, arg} from \"@onflow/sdk-build-arguments\"\nexport {proposer} from \"@onflow/sdk-build-proposer\"\nexport {payer} from \"@onflow/sdk-build-payer\"\nexport {limit} from \"@onflow/sdk-build-limit\"\nexport {ref} from \"@onflow/sdk-build-ref\"\nexport {params, param} from \"@onflow/sdk-build-params\"\n\nexport const VERSION = \"0.0.67\"\n"],"names":["config","put","isFn","v","isString","cast","arg","invariant","xform","value","asArgument","Symbol","iterator","pact","state","s","o","_settle","bind","then","observer","_Pact","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","collectAccounts","ix","accounts","last","depth","authorizations","map","d","tempId","reduce","prev","curr","Array","isArray","target","body","check","step","reject","_cycle","next","done","_isSettledPact","_fixup","TypeError","values","i","length","push","array","ax","old","role","proposer","payer","authorizer","resolve","acct","f_type","f_vsn","roles","cadence","message","args","arguments","data","interaction","error","console","buildPreSignable","t","n","Buffer","from","padStart","u","JSON","stringify","c","toString","a","r","script","refBlock","gasLimit","proposalKey","address","keyId","sequenceNum","authorizers","f","payloadSigs","signerIndex","get","sig","sort","Map","has","set","forEach","k","g","l","m","h","y","name","defaultVal","I","x","K","S","E","Error","fetchSignature","payload","id","signature","signingFunction","addr","sansPrefix","buildSignable","prepForEncoding","computeLimit","cid","current","find","item","pipe","isTransaction","isScript","where","Object","entries","replace","recover","latestBlock","_latestBlock","fetchAccount","keys","key","index","sequenceNumber","insideSigners","inside","Set","add","findInsideSigners","insidePayload","Promise","all","outsideSigners","outside","findOutsideSigners","outsidePayload","p","encodeOutsideMessage","serialize","opts","defaultResolve","resolveFunction","fetchTxStatus","transactionId","fclSend","getTransactionStatus","decode","isSealed","tx","status","isExecuted","isFinalized","HANDLERS","INIT","ctx","self","setTimeout","sendSelf","merge","SUBSCRIBE","letter","subscribe","send","UPDATED","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","cur","broadcast","scoped","spawnTransaction","spawn","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshot","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","scheduleTick","hasSubs","hwm","_put4","_put2","getEvents","height","_put3","_put6","clearTimeout","spawnEvents","events","SERVICE_PRAGMA","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","type","endpoint","params","normalizeBackChannelRpc","method","serviceNormalizers","back-channel-rpc","pre-authz","uid","identity","withPrefix","authz","authn","pid","provider","icon","frame","deriveCompositeId","rlp","serviceOfType","services","serviceEndpoint","url","URL","searchParams","append","window","location","origin","fetchService","undefined","fetch","headers","Content-Type","json","normalizePollingResponse","resp","reason","compositeSignature","updates","authorizationUpdates","local","normalizeCompositeSignature","FRAME","noop","IGNORE","log","close","onClose","onMessage","onReady","addEventListener","internal","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","remove","renderFrame","unmount","removeEventListener","msg","contentWindow","postMessage","parse","OPTIONS","HTTP/GET","HTTP/POST","serviceMethod","execHttpPost","signable","canContinue","closeFrame","poll","execService","STRATEGIES","HTTP/RPC","IFRAME/RPC","_","jsonrpc","authorization","account","spawnCurrentUser","authenticate","user","preAuthz","preSignable","resolvePreAuthz","loggedIn","notExpired","l6n","unrender","handshake","href","replyFn","CHALLENGE_CANCEL_EVENT","CANCEL_EVENT","CHALLENGE_RESPONSE_EVENT","paddr","normalizeData","servicesURL","code","fetchServices","hks","sx1","sx2","normalizeService","findService","expiresAt","exp","buildUser","NAME","SET_CURRENT_USER","DATA","coldStorage","sessionStorage","setItem","canColdStorage","fallback","stored","getItem","removeItem","Date","now","unauthenticate","normalizePreAuthzResponse","axs","az","join","test","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","expectReply","timeout","currentUser","reauthenticate","signUp","logIn","VERSION"],"mappings":"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"}