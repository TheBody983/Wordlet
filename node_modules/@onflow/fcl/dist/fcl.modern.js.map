{"version":3,"file":"fcl.modern.js","sources":["../src/default-config.js","../src/resolvers/resolve-cadence.js","../src/resolvers/resolve-arguments.js","../src/resolvers/resolve-accounts.js","../node_modules/@onflow/encode/dist/encode.module.js","../src/resolvers/resolve-signatures.js","../src/temp.js","../src/resolvers/resolve-final-normalization.js","../src/serialize/index.js","../src/transaction/index.js","../src/events/index.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/normalize/composite-signature.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/index.js","../src/current-user/render-authn-frame.js","../src/current-user/render-frame.js","../src/current-user/merge-services.js","../src/current-user/fetch-services.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"challenge.handshake\", \"http://localhost:8700/authenticate\")\n","import {isTransaction, isScript, get} from \"@onflow/interaction\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"@onflow/interaction\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"@onflow/interaction\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import{encode as n}from\"@onflow/rlp\";var e=function(n){return c(a(n))},r=function(n){return c(i(n))},t=function(n,e){return Buffer.from(n.padStart(2*e,0),\"hex\")},o=function(n){return t(n,8)},u=function(n){return Buffer.from(JSON.stringify(n),\"utf8\")},c=function(e){return n(e).toString(\"hex\")},a=function(n){return d(n),[(r=n.script,Buffer.from(r,\"utf8\")),n.arguments.map(u),(e=n.refBlock,t(e,32)),n.gasLimit,o(n.proposalKey.address),n.proposalKey.keyId,n.proposalKey.sequenceNum,o(n.payer),n.authorizers.map(o)];var e,r},i=function(n){return p(n),[a(n),f(n)]},f=function(n){var e=s(n);return n.payloadSigs.map(function(n){return{signerIndex:e.get(n.address),keyId:n.keyId,sig:n.sig}}).sort(function(n,e){return n.signerIndex>e.signerIndex?1:n.signerIndex<e.signerIndex?-1:n.keyId>e.keyId?1:n.keyId<e.keyId?-1:void 0}).map(function(n){return[n.signerIndex,n.keyId,(e=n.sig,Buffer.from(e,\"hex\"))];var e})},s=function(n){var e=new Map,r=0,t=function(n){e.has(n)||(e.set(n,r),r++)};return t(n.proposalKey.address),t(n.payer),n.authorizers.forEach(t),e},d=function(n){k.forEach(function(e){return v(n,e)}),g.forEach(function(e){return v(n.proposalKey,e,\"proposalKey\")})},p=function(n){I.forEach(function(e){return v(n,e)}),n.payloadSigs.forEach(function(n,e){x.forEach(function(r){return v(n,r,\"payloadSigs\",e)})})},l=function(n){return\"number\"==typeof n},m=function(n){return\"string\"==typeof n},h=function(n){return null!==n&&\"object\"==typeof n},y=function(n){return h(n)&&n instanceof Array},k=[{name:\"script\",check:m},{name:\"arguments\",check:y},{name:\"refBlock\",check:m,defaultVal:\"0\"},{name:\"gasLimit\",check:l},{name:\"proposalKey\",check:h},{name:\"payer\",check:m},{name:\"authorizers\",check:y}],g=[{name:\"address\",check:m},{name:\"keyId\",check:l},{name:\"sequenceNum\",check:l}],I=[{name:\"payloadSigs\",check:y}],x=[{name:\"address\",check:m},{name:\"keyId\",check:l},{name:\"sig\",check:m}],v=function(n,e,r,t){var o=e.name,u=e.check,c=e.defaultVal;if(null==n[o]&&null!=c&&(n[o]=c),null==n[o])throw K(o,r,t);if(!u(n[o]))throw S(o,r,t)},E=function(n,e,r){return e?null==r?e+\".\"+n:e+\".\"+r+\".\"+n:n},K=function(n,e,r){return new Error(\"Missing field \"+E(n,e,r))},S=function(n,e,r){return new Error(\"Invalid field \"+E(n,e,r))};export{r as encodeTransactionEnvelope,e as encodeTransactionPayload};\n//# sourceMappingURL=encode.module.js.map\n","import {isTransaction} from \"@onflow/interaction\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"@onflow/encode\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {pipe} from \"@onflow/interaction\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"@onflow/interaction\"\nimport {latestBlock} from \"@onflow/sdk-latest-block\"\nimport {account as fetchAccount} from \"@onflow/sdk-account\"\n\nimport {resolveCadence} from \"./resolvers/resolve-cadence.js\"\nimport {resolveArguments} from \"./resolvers/resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolvers/resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolvers/resolve-signatures.js\"\nimport {resolveFinalNormalization} from \"./resolvers/resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n  resolveCadence,\n  resolveArguments,\n  resolveAccounts,\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  resolveFinalNormalization,\n])\n\nconfig().put(\"sdk.resolve\", resolve)\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    ix.message.refBlock = (await latestBlock()).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      ix.accounts[acct.tempId].sequenceNum = await fetchAccount(acct.addr)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {interaction, pipe} from \"@onflow/interaction\"\nimport {resolve as defaultResolve} from \"@onflow/sdk-resolve\"\nimport {config} from \"@onflow/config\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  // prettier-ignore\n  const resolveFunction = await config()\n    .get(\"sdk.resolve\", opts.resolve || defaultResolve(opts))\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n  return JSON.stringify(await resolveFunction(args), null, 2)\n}\n","import \"../default-config\"\nimport {config} from \"@onflow/config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend} from \"@onflow/sdk-send\"\nimport {decode} from \"@onflow/sdk-decode\"\nimport {getTransactionStatus} from \"@onflow/sdk-build-transaction-status\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async (transactionId) => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = (tx) => tx.status === 5\nconst isSealed = (tx) => tx.status >= 4\nconst isExecuted = (tx) => tx.status >= 3\nconst isFinalized = (tx) => tx.status >= 2\nconst isPending = (tx) => tx.status >= 1\nconst isUnknown = (tx) => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async (ctx) => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = (transactionId) => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = (transactionId) => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus) => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config} from \"@onflow/config\"\nimport {latestBlock} from \"@onflow/sdk-latest-block\"\nexport {getEvents} from \"@onflow/sdk-build-get-events\"\nimport {send} from \"@onflow/sdk-send\"\nimport {decode} from \"@onflow/sdk-decode\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGME = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\n\nexport function normalizeServices(services, data) {\n  return services.map((service) => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    // console.log(service.type, {normalized, service})\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:FRAME:CLOSE\"\nconst READY_EVENT = \"FCL:FRAME:READY\"\n\nconst noop = () => {}\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  console.log(\"FRAME\", {service, opts})\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (e.data.type === CLOSE_EVENT) close()\n      if (e.data.type === READY_EVENT) onReady(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (e.data.type === \"FCL::AUTHZ_READY\") onReady(e, {send, close})\n      if (e.data.type === \"FCL::CHALLENGE::CANCEL\") close()\n      if (e.data.type === \"FCL::CANCEL\") close()\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      console.log(\"SEND\", msg)\n      $frame.contentWindow.postMessage(\n        JSON.parse(JSON.stringify(msg || {})),\n        \"*\"\n      )\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {serviceEndpoint} from \"./utils/service-endpoint\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\nimport {frame} from \"./utils/frame\"\nimport {poll} from \"./utils/poll\"\n\nexport async function execHttpPost(service, signable) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const {close: closeFrame} = frame(resp.local, {\n      onClose() {\n        canContinue = false\n      },\n    })\n\n    return poll(resp.updates, () => canContinue)\n      .then(compositeSignature => {\n        closeFrame()\n        return normalizeCompositeSignature(compositeSignature)\n      })\n      .catch(error => {\n        console.error(error)\n        closeFrame()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n}\n\nexport async function execService(service, msg) {\n  try {\n    return STRATEGIES[service.method](service, msg)\n  } catch (error) {\n    console.error(\"execService(service, msg)\", error, {service, msg})\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeCompositeSignature} from \"../../normalize/composite-signature\"\n\nexport function execIframeRPC(service, signable) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    signable.data = service.data\n\n    frame(service, {\n      onReady(_, {send}) {\n        try {\n          send({\n            jsonrpc: \"2.0\",\n            id: id,\n            method: \"fcl:sign\",\n            params: [signable, service.params],\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(normalizeCompositeSignature(resp.data))\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n    })\n  })\n}\n","import \"../default-config\"\nimport {account} from \"@onflow/sdk-account\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {account as fetchAccount} from \"@onflow/sdk-account\"\nimport {renderAuthnFrame} from \"./render-authn-frame\"\nimport {buildUser} from \"./build-user\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {validateCompositeSignature} from \"./validate-composite-signature\"\nimport {execService} from \"./exec-service\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\n// Backwards Compatibility\nconst CANCEL_EVENT = \"FCL::CANCEL\"\nconst CHALLENGE_RESPONSE_EVENT = \"FCL::CHALLENGE::RESPONSE\"\nconst CHALLENGE_CANCEL_EVENT = \"FCL::CHALLENGE::CANCEL\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(sessionStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      sessionStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    sessionStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function authenticate() {\n  return new Promise(async resolve => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n\n    const [$frame, unrender] = renderAuthnFrame({\n      handshake: await config().get(\"challenge.handshake\"),\n      l6n: window.location.origin,\n    })\n\n    const replyFn = async ({data}) => {\n      if (data.type === CHALLENGE_CANCEL_EVENT || data.type === CANCEL_EVENT) {\n        unrender()\n        window.removeEventListener(\"message\", replyFn)\n        return\n      }\n      if (data.type !== CHALLENGE_RESPONSE_EVENT) return\n\n      unrender()\n      window.removeEventListener(\"message\", replyFn)\n\n      send(NAME, SET_CURRENT_USER, await buildUser(data))\n      resolve(await snapshot())\n    }\n\n    window.addEventListener(\"message\", replyFn)\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService(az, signable)\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(await execService(preAuthz, preSignable))\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return execService(authz, signable)\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    subscribe,\n    snapshot,\n  }\n}\n","import {renderFrame} from \"./render-frame\"\n\nexport function renderAuthnFrame({handshake, l6n}) {\n  var url = new URL(handshake)\n  url.searchParams.append(\"l6n\", l6n)\n  return renderFrame(url.href)\n}\n","const FRAME_ID = \"FCL_IFRAME\"\n\nexport function renderFrame(src) {\n  if (document.getElementById(FRAME_ID)) return\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME_ID\n  $frame.allow = \"usb *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = `\n    position:fixed;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    height: 100vh;\n    width: 100vw;\n    display:block;\n    background:rgba(0,0,0,0.25);\n    z-index: 2147483647;\n    box-sizing: border-box;\n  `\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME_ID)) {\n      document.getElementById(FRAME_ID).remove()\n    }\n  }\n\n  return [$frame, unmount]\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import \"./default-config\"\nimport \"./temp\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = () => currentUser().authenticate()\nexport const logIn = () => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk-send\"\nexport {decode} from \"@onflow/sdk-decode\"\nexport {account} from \"@onflow/sdk-account\"\nexport {latestBlock} from \"@onflow/sdk-latest-block\"\nexport {isOk, isBad, why, pipe} from \"@onflow/interaction\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// builders\nexport {transaction} from \"@onflow/sdk-build-transaction\"\nexport {script} from \"@onflow/sdk-build-script\"\nexport {ping} from \"@onflow/sdk-build-ping\"\nexport {getAccount} from \"@onflow/sdk-build-get-account\"\nexport {getEvents} from \"@onflow/sdk-build-get-events\"\nexport {getLatestBlock} from \"@onflow/sdk-build-get-latest-block\"\nexport {getBlockById} from \"@onflow/sdk-build-get-block-by-id\"\nexport {getBlockByHeight} from \"@onflow/sdk-build-get-block-by-height\"\nexport {getTransactionStatus} from \"@onflow/sdk-build-transaction-status\"\nexport {authorizations, authorization} from \"@onflow/sdk-build-authorizations\"\nexport {args, arg} from \"@onflow/sdk-build-arguments\"\nexport {proposer} from \"@onflow/sdk-build-proposer\"\nexport {payer} from \"@onflow/sdk-build-payer\"\nexport {limit} from \"@onflow/sdk-build-limit\"\nexport {ref} from \"@onflow/sdk-build-ref\"\nexport {params, param} from \"@onflow/sdk-build-params\"\n\nexport const VERSION = \"0.0.67\"\n"],"names":["config","put","isFn","v","isString","cast","arg","invariant","xform","value","asArgument","buildPreSignable","acct","ix","f_type","f_vsn","roles","role","cadence","message","args","arguments","map","d","data","interaction","error","console","async","collectAccounts","accounts","last","depth","authorizations","ax","old","resolve","Array","isArray","tempId","proposer","payer","authorizer","reduce","prev","curr","t","n","e","Buffer","from","padStart","o","u","JSON","stringify","c","toString","a","r","script","refBlock","gasLimit","proposalKey","address","keyId","sequenceNum","authorizers","f","s","payloadSigs","signerIndex","get","sig","sort","Map","has","set","forEach","k","g","l","m","h","y","name","check","defaultVal","I","x","K","S","E","Error","fetchSignature","payload","id","signature","signingFunction","addr","sansPrefix","buildSignable","prepForEncoding","computeLimit","cid","current","find","item","pipe","isTransaction","isScript","where","then","Object","entries","key","replace","values","latestBlock","fetchAccount","keys","index","sequenceNumber","insideSigners","inside","Set","add","delete","findInsideSigners","insidePayload","Promise","all","outsideSigners","outside","findOutsideSigners","outsidePayload","p","i","encodeOutsideMessage","serialize","opts","resolveFunction","defaultResolve","fetchTxStatus","fclSend","getTransactionStatus","transactionId","decode","isSealed","tx","status","isExecuted","isFinalized","HANDLERS","[object Object]","INIT","ctx","self","setTimeout","sendSelf","merge","SUBSCRIBE","letter","subscribe","send","UPDATED","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","POLL","cur","next","broadcast","scoped","spawnTransaction","spawn","transaction","callback","subscriber","once","predicate","suppress","reject","unsub","txStatus","statusCode","errorMessage","snapshot","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","scheduleTick","TICK","hasSubs","hwm","getEvents","height","clearTimeout","spawnEvents","events","SERVICE_PRAGMA","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","type","endpoint","params","normalizeBackChannelRpc","method","serviceNormalizers","back-channel-rpc","pre-authz","uid","identity","withPrefix","authz","authn","pid","provider","icon","frame","deriveCompositeId","rlp","serviceOfType","services","serviceEndpoint","url","URL","searchParams","append","window","location","origin","fetchService","body","undefined","fetch","headers","Content-Type","json","normalizePollingResponse","resp","reason","compositeSignature","updates","authorizationUpdates","local","normalizeCompositeSignature","FRAME","noop","IGNORE","log","close","onClose","onMessage","onReady","addEventListener","internal","$frame","unmount","src","document","getElementById","createElement","allow","frameBorder","style","cssText","remove","renderFrame","removeEventListener","msg","contentWindow","postMessage","parse","OPTIONS","HTTP/GET","HTTP/POST","serviceMethod","execHttpPost","signable","canContinue","closeFrame","poll","catch","STRATEGIES","HTTP/RPC","IFRAME/RPC","_","jsonrpc","result","execService","NAME","DATA","coldStorage","sessionStorage","setItem","canColdStorage","user","fallback","stored","getItem","removeItem","notExpired","SET_CURRENT_USER","DEL_CURRENT_USER","spawnCurrentUser","expiresAt","Date","now","authenticate","loggedIn","unrender","handshake","l6n","href","renderAuthnFrame","replyFn","sx1","sx2","mergeServices","paddr","normalizeData","servicesURL","code","push","fetchServices","hks","normalizeService","findService","exp","buildUser","unauthenticate","authorization","account","preAuthz","preSignable","normalizePreAuthzResponse","axs","az","join","resolvePreAuthz","receive","tag","expectReply","timeout","currentUser","reauthenticate","signUp","logIn","VERSION"],"mappings":"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"}