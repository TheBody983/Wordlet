{"version":3,"file":"sdk-resolve-accounts.umd.js","sources":["../src/index.js"],"sourcesContent":["import {pipe, isTransaction, Ok} from \"@onflow/interaction\"\n\nconst isFn = d => typeof d === \"function\"\nconst isNumber = d => typeof d === \"number\"\nconst isString = d => typeof d === \"string\"\n\nconst invariant = (fact, msg, ...rest) => {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n\nconst accountCanFulfillRoles = account => {\n  if (account.role.proposer) {\n    if (\n      !isString(account.addr) ||\n      !isNumber(account.keyId) ||\n      !isNumber(account.sequenceNum) ||\n      !isFn(account.signingFunction)\n    )\n      return false\n  }\n  if (account.role.payer) {\n    if (\n      !isString(account.addr) ||\n      !isNumber(account.keyId) ||\n      !isFn(account.signingFunction)\n    )\n      return false\n  }\n  if (account.role.authorizer) {\n    if (\n      !isString(account.addr) ||\n      !isNumber(account.keyId) ||\n      !isFn(account.signingFunction)\n    )\n      return false\n  }\n  return true\n}\n\nconst firstNonNull = (values = []) => values.filter(Boolean)[0] || null\nconst firstNonNullKeyId = (values = []) =>\n  typeof values.filter(isNumber)[0] === \"number\"\n    ? values.filter(isNumber)[0]\n    : null\nconst findProposer = (accounts = []) =>\n  accounts.find(d => d.role.proposer) || {}\n\nconst deepMergeAccount = (into, from) => ({\n  kind: firstNonNull([into.kind, from.kind]),\n  tempId: firstNonNull([into.tempId, from.tempId]),\n  addr: firstNonNull([into.addr, from.addr]),\n  keyId: firstNonNullKeyId([into.keyId, from.keyId]),\n  sequenceNum:\n    typeof findProposer([into, from]).sequenceNum === \"number\"\n      ? findProposer([into, from]).sequenceNum\n      : into.sequenceNum,\n  signature: firstNonNull([into.signature, from.signature]),\n  signingFunction: firstNonNull([into.signingFunction, from.signingFunction]),\n  resolve: firstNonNull([into.resolve, from.resolve]),\n  role: {\n    proposer: into.role.proposer || from.role.proposer,\n    authorizer: into.role.authorizer || from.role.authorizer,\n    payer: into.role.payer || from.role.payer,\n    param: into.role.param || from.role.param,\n  },\n})\n\nexport const enforceResolvedAccounts = async ix => {\n  if (!isTransaction(ix)) return Ok(ix)\n  for (let [tempId, account] of Object.entries(ix.accounts)) {\n    if (isFn(account.resolve))\n      ix.accounts[tempId] = await account.resolve(account)\n    invariant(\n      accountCanFulfillRoles(ix.accounts[tempId]),\n      \"Account unable to fulfill role\",\n      ix.accounts[tempId]\n    )\n  }\n  return Ok(ix)\n}\n\nexport const dedupeResolvedAccounts = async ix => {\n  if (!isTransaction(ix)) return Ok(ix)\n  for (let account of Object.values(ix.accounts)) {\n    const cid = `${account.addr}|${account.keyId}`\n    if (ix.accounts[cid] != null) {\n      ix.accounts[cid] = deepMergeAccount(ix.accounts[cid], {\n        tempId: cid,\n        ...account,\n      })\n    } else {\n      ix.accounts[cid] = {tempId: cid, ...account}\n    }\n    if (ix.proposer === account.tempId) ix.proposer = cid\n    if (ix.payer === account.tempId) ix.payer = cid\n    ix.authorizations = ix.authorizations.map(d =>\n      d === account.tempId ? cid : d\n    )\n    delete ix.accounts[account.tempId]\n  }\n  for (let account of Object.values(ix.accounts)) {\n    invariant(\n      accountCanFulfillRoles(account),\n      \"Account unable to fulfill roles\",\n      account\n    )\n  }\n  return Ok(ix)\n}\n\nexport const resolveAccounts = pipe([\n  enforceResolvedAccounts,\n  dedupeResolvedAccounts,\n])\n"],"names":["Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","isFn","d","isNumber","isString","invariant","fact","msg","error","Error","stack","split","filter","test","join","console","accountCanFulfillRoles","account","role","proposer","addr","keyId","sequenceNum","signingFunction","payer","authorizer","firstNonNull","values","Boolean","findProposer","accounts","find","enforceResolvedAccounts","ix","Ok","isTransaction","target","body","check","_iteratorSymbol","step","reject","_cycle","next","done","_fixup","TypeError","i","length","push","array","_forTo","Object","entries","tempId","resolve","dedupeResolvedAccounts","into","from","cid","kind","signature","param","authorizations","map","resolveAccounts","pipe"],"mappings":"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"}